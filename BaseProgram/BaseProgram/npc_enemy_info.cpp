//=============================================================================
//
// 敵の情報をもつNPCクラス [npc_enemy_info.cpp]
// Author : Konishi Yuuto
//
//=============================================================================

//=============================================================================
// インクルード
//=============================================================================
#include "npc_enemy_info.h"
#include "renderer.h"
#include "manager.h"
#include "resource_manager.h"
#include "library.h"
#include "game.h"

//=============================================================================
// マクロ定義
//=============================================================================
#define POS     (D3DXVECTOR3(1893.3f, 111.0f, 908.5f))
#define ROT     (D3DXVECTOR3(D3DXToRadian(90.0f), D3DXToRadian(180.0f), 0.0f))

//=============================================================================
// コンストラクタ
//=============================================================================
CNpcEnemyInfo::CNpcEnemyInfo()
{

}

//=============================================================================
// デストラクタ
//=============================================================================
CNpcEnemyInfo::~CNpcEnemyInfo()
{

}

//=============================================================================
// インスタンス生成
//=============================================================================
CNpcEnemyInfo * CNpcEnemyInfo::Create()
{
    CNpcEnemyInfo* pNpc = new CNpcEnemyInfo;
    if (pNpc)
    {
        // 初期化処理
        pNpc->Init();
        return pNpc;
    }

    return nullptr;
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CNpcEnemyInfo::Init()
{
    SetPos(POS);
    SetRot(ROT);
    CNonPlayerCharacter::Init();

    return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CNpcEnemyInfo::Uninit()
{
    //オブジェクトの破棄
    Release();
}

//=============================================================================
// 更新処理
//=============================================================================
void CNpcEnemyInfo::Update()
{
    CNonPlayerCharacter::Update();
}

//=============================================================================
// 描画処理
//=============================================================================
void CNpcEnemyInfo::Draw()
{
    CNonPlayerCharacter::Draw();
}