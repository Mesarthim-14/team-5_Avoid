//=============================================================================
//
// 発射弾 [bullet.cpp]
// Author : Hayashikawa Sarina
//
//=============================================================================

//=============================================================================
// インクルード
//=============================================================================
#include "manager.h"
#include "renderer.h"
#include "game.h"
#include "bullet.h"
#include "texture.h"
#include "resource_manager.h"
#include "xfile.h"
#include "model_info.h"
#include "player.h"

//=============================================================================
// マクロ定義
//=============================================================================
#define TEST_POS		(ZeroVector3)
#define TEST_ROT		(ZeroVector3)

//=============================================================================
// コンストラクタ
//=============================================================================
CBullet::CBullet(PRIORITY Priority) : CScene(Priority)
{
	m_pos = ZeroVector3;						// 座標
	m_move = ZeroVector3;						// 移動量
	m_rot = ZeroVector3;						// 現在の回転
	m_size = ZeroVector3;						// サイズ
	m_nLife = 0;							    // 生存時間
	m_fSpeed = 0.0f;							// スピード
	m_nDamage = 0;							        // ダメージ量
	m_pos = ZeroVector3;
	m_rot = ZeroVector3;
}

//=============================================================================
// デストラクタ
//=============================================================================
CBullet::~CBullet()
{
}

//=============================================================================
// インスタンス生成
//=============================================================================
CBullet * CBullet::Create(void)
{
	// メモリ確保
	CBullet *pBullet = new CBullet(PRIORITY_TEST_MODEL);

	// !nullcheck
	if (pBullet)
	{
		// 初期化処理
		pBullet->Init();

		return pBullet;
	}

	return nullptr;
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CBullet::Init(void)
{
	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CBullet::Uninit(void)
{

}

//=============================================================================
// 更新処理
//=============================================================================
void CBullet::Update(void)
{
	// 位置更新
	m_pos += m_move;

	m_nLife--;

	if (m_nLife < 0)
	{
		Uninit();
	}
}

//=============================================================================
// 描画処理
//=============================================================================
void CBullet::Draw(void)
{

}