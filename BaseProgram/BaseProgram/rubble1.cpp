//=============================================================================CRubble
//
// 瓦礫クラス [rubble1.cpp]
// Author : Konishi Yuuto
//
//=============================================================================

//=============================================================================
// インクルード
//=============================================================================
#include "rubble1.h"
#include "manager.h"
#include "renderer.h"
#include "game.h"
#include "texture.h"
#include "resource_manager.h"
#include "xfile.h"
#include "model_info.h"
#include "player.h"

//=============================================================================
// コンストラクタ
//=============================================================================
CRubble1::CRubble1(PRIORITY Priority) : CModel(Priority)
{

}

//=============================================================================
// デストラクタ
//=============================================================================
CRubble1::~CRubble1()
{
}

//=============================================================================
// インスタンス生成
//=============================================================================
CRubble1 * CRubble1::Create(const D3DXVECTOR3& pos, const D3DXVECTOR3& rot)
{
    // メモリ確保
    CRubble1 *pTestModel = new CRubble1(PRIORITY_MAP);

    // !nullcheck
    if (pTestModel)
    {
        // 初期化処理
        pTestModel->Init(pos, rot);
        return pTestModel;
    }

    return nullptr;
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CRubble1::Init(const D3DXVECTOR3& pos, const D3DXVECTOR3& rot)
{
    // 初期化処理
    CModel::Init();

    CXfile *pXfile = GET_XFILE_PTR;
    CXfile::MODEL model = pXfile->GetXfile(CXfile::XFILE_NUM_GIMMICK_PARTY_RUBBLE1);
    GetModelInfo()->SetModelStatus(pos, rot, model);

    return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CRubble1::Uninit()
{
    CModel::Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void CRubble1::Update()
{
    CModel::Update();
}

//=============================================================================
// 描画処理
//=============================================================================
void CRubble1::Draw()
{
    CModel::Draw();
}