//=======================================================================================
//
// 演出クラス [production.cpp]
// Author : Konishi Yuuto
//
//=======================================================================================

//=======================================================================================
// インクルード
//=======================================================================================
#include "production.h"
#include "manager.h"
#include "renderer.h"
#include "player.h"
#include "resource_manager.h"

//=======================================================================================
// コンストラクタ
//=======================================================================================
CProduction::CProduction()
{
    m_nCounter = 0;
    m_bEnd = false;
}

//=======================================================================================
// デストラクタ
//=======================================================================================
CProduction::~CProduction()
{
}

//=======================================================================================
// 初期化処理
//=======================================================================================
void CProduction::Init()
{
}

//=======================================================================================
// 終了処理
//=======================================================================================
void CProduction::Uninit()
{
    delete this;
}

//=======================================================================================
// 更新処理
//=======================================================================================
void CProduction::Update()
{

}

//=======================================================================================
// 状態の生成
//=======================================================================================
void CProduction::CreateState(CStateObject* pObj, CState* pState)
{
    if (pObj && pState)
    {
        pObj->ChangeState(pState);
    }
}
