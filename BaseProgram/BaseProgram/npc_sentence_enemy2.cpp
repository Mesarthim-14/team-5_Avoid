//=============================================================================
//
// エネミーの文章2 [npc_sentence_enemy2.cpp]
// Author : Konishi Yuuto
//
//=============================================================================

//=============================================================================
// インクルード
//=============================================================================
#include "npc_sentence_enemy2.h"
#include "renderer.h"
#include "manager.h"
#include "resource_manager.h"
#include "library.h"
#include "game.h"
#include "npc_enemy_info.h"
#include "npc_factory.h"

//=============================================================================
// マクロ定義
//=============================================================================
#define SIZE (D3DXVECTOR3(1000.0f, 1000.0f, 0.0f))

//=============================================================================
// コンストラクタ
//=============================================================================
CNpcSentenceEnemy2::CNpcSentenceEnemy2()
{

}

//=============================================================================
// デストラクタ
//=============================================================================
CNpcSentenceEnemy2::~CNpcSentenceEnemy2()
{

}

//=============================================================================
// インスタンス生成
//=============================================================================
CNpcSentenceEnemy2 * CNpcSentenceEnemy2::Create()
{
    // メモリ確保
    CNpcSentenceEnemy2* pNpc = new CNpcSentenceEnemy2;
    if (pNpc)
    {
        // 初期化処理
        pNpc->Init();
        return pNpc;
    }

    return nullptr;
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CNpcSentenceEnemy2::Init()
{
    CNpcEnemyInfo* pNpc = (CNpcEnemyInfo*)CManager::GetInstance()->GetGame()->GetNpcFactory()->GetNPC(CNpcFactory::NPC_TYPE_ENEMY_INFO);
    D3DXVECTOR3 pos = pNpc->GetPos();
    pos.y += 1000.0f;
    SetSceneInfo(pos, SIZE);

    CBillboard::Init();
    BindTexture(nullptr);

    return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CNpcSentenceEnemy2::Uninit()
{
    CBillboard::Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void CNpcSentenceEnemy2::Update()
{
    CBillboard::Update();
}