//=======================================================================================
//
// NPC生成クラス [npc_factory.cpp]
// Author : Konishi Yuuto
//
//=======================================================================================

//=======================================================================================
// インクルード
//=======================================================================================
#include "npc_factory.h"
#include "manager.h"
#include "resource_manager.h"
#include "npc_enemy_info.h"

//=======================================================================================
// コンストラクタ
//=======================================================================================
CNpcFactory::CNpcFactory()
{
    m_pNPC.clear();
}

//=======================================================================================
// デストラクタ
//=======================================================================================
CNpcFactory::~CNpcFactory()
{
}

//=======================================================================================
// インスタンス生成
//=======================================================================================
CNpcFactory * CNpcFactory::Create()
{
    CNpcFactory *pNpcFactory = new CNpcFactory;
    if (pNpcFactory)
    {
        pNpcFactory->Init();
        return pNpcFactory;
    }
    return nullptr;
}

//=======================================================================================
// 初期化処理
//=======================================================================================
HRESULT CNpcFactory::Init()
{
    CreateNPC();

    return S_OK;
}

//=======================================================================================
// 終了処理
//=======================================================================================
void CNpcFactory::Uninit()
{
    for (auto &pNPC : m_pNPC)
    {
        // 終了処理
        pNPC->Uninit();
        pNPC = nullptr;
    }

    m_pNPC.clear();
}

//=======================================================================================
// 更新処理
//=======================================================================================
void CNpcFactory::Update()
{
}

//=======================================================================================
// NPC生成
//=======================================================================================
void CNpcFactory::CreateNPC()
{
    m_pNPC.push_back(CNpcEnemyInfo::Create());
}