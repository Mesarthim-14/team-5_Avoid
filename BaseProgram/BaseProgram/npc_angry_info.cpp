//=============================================================================
//
// 敵の情報をもつNPCクラス [npc_angry_info.cpp]
// Author : Konishi Yuuto
//
//=============================================================================

//=============================================================================
// インクルード
//=============================================================================
#include "npc_angry_info.h"
#include "renderer.h"
#include "manager.h"
#include "resource_manager.h"
#include "library.h"
#include "game.h"
#include "npc_text_enemy.h"

//=============================================================================
// マクロ定義
//=============================================================================
#define POS     (D3DXVECTOR3(-33148.2f, 5326.1f, -52305.8f))
#define ROT     (D3DXVECTOR3(D3DXToRadian(90.0f), D3DXToRadian(30.0f), 0.0f))

//=============================================================================
// コンストラクタ
//=============================================================================
CNpcAngryInfo::CNpcAngryInfo()
{
    
}

//=============================================================================
// デストラクタ
//=============================================================================
CNpcAngryInfo::~CNpcAngryInfo()
{

}

//=============================================================================
// インスタンス生成
//=============================================================================
CNpcAngryInfo * CNpcAngryInfo::Create()
{
    // メモリ確保
    CNpcAngryInfo* pNpc = new CNpcAngryInfo;
    if (pNpc)
    {
        // 初期化処理
        pNpc->Init();
        return pNpc;
    }

    return nullptr;
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CNpcAngryInfo::Init()
{
    SetPos(POS);
    SetRot(ROT);
    CNonPlayerCharacter::Init();

    return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CNpcAngryInfo::Uninit()
{
    //オブジェクトの破棄
    Release();
}

//=============================================================================
// 更新処理
//=============================================================================
void CNpcAngryInfo::Update()
{
    CNonPlayerCharacter::Update();
}

//=============================================================================
// 描画処理
//=============================================================================
void CNpcAngryInfo::Draw()
{
    CNonPlayerCharacter::Draw();
}

//=============================================================================
// 話の生成
//=============================================================================
void CNpcAngryInfo::Talk()
{
    if (!GetTextPtr())
    {
        // 話の生成
        CreateTalk(CNpcTextEnemy::Create());
    }
}