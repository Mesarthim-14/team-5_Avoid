//=============================================================================CGround
//
// 地面クラス [ground.cpp]
// Author : Konishi Yuuto
//
//=============================================================================

//=============================================================================
// インクルード
//=============================================================================
#include "ground.h"
#include "manager.h"
#include "renderer.h"
#include "game.h"
#include "texture.h"
#include "resource_manager.h"

//=============================================================================
// マクロ定義
//=============================================================================
#define SIZE (D3DXVECTOR3(1000.0f, 0.0f, 1000.0f))
#define GROUND_VERTEX_NUM (INT_VERTEX_2D{5, 5})

//=============================================================================
// コンストラクタ
//=============================================================================
CGround::CGround(PRIORITY Priority) : CMeshField(Priority)
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CGround::~CGround()
{
}

//=============================================================================
// インスタンス生成
//=============================================================================
CGround * CGround::Create(void)
{
	// メモリ確保
	CGround *pPolygon = new CGround(PRIORITY_UI);

	// !nullcheck
	if (pPolygon)
	{
		// 初期化処理
		pPolygon->Init();

		return pPolygon;
	}

	return nullptr;
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CGround::Init(void)
{
	// 初期化処理
	SetInfo(SIZE, GROUND_VERTEX_NUM);
	CMeshField::Init();
	CTexture *pTexture = GET_TEXTURE_PTR;
	BindTexture(pTexture->GetTexture(CTexture::TEXTURE_NUM_TEST));

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CGround::Uninit(void)
{
	CMeshField::Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void CGround::Update(void)
{
	CMeshField::Update();
}

//=============================================================================
// 描画処理
//=============================================================================
void CGround::Draw(void)
{
	CMeshField::Draw();
}
