//=============================================================================
//
// タイトルUIクラス [title_logo.cpp]
// Author : Suzuki Mahiro
//
//=============================================================================

//=============================================================================
// インクルード
//=============================================================================
#include "manager.h"
#include "renderer.h"
#include "game.h"
#include "title_logo.h"
#include "texture.h"
#include "resource_manager.h"

//=============================================================================
// マクロ定義
//=============================================================================
#define SIZE     (D3DXVECTOR3(1200.0f, 900.0f, 0.0f))

//=============================================================================
// コンストラクタ
//=============================================================================
CTitleLogo::CTitleLogo(PRIORITY Priority) : CScene2D(Priority)
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CTitleLogo::~CTitleLogo()
{
}

//=============================================================================
// インスタンス生成
//=============================================================================
CTitleLogo * CTitleLogo::Create()
{
    // メモリ確保
    CTitleLogo *pPolygon = new CTitleLogo(PRIORITY_UI);

    // !nullcheck
    if (pPolygon)
    {
        // 初期化処理
        pPolygon->Init();
        return pPolygon;
    }

    return nullptr;
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CTitleLogo::Init()
{
    // 初期化処理
    SetSceneInfo(D3DXVECTOR3(HALF_SCREEN_POS.x, HALF_SCREEN_POS.y - 50.0f, 0.0f), SIZE);
    CScene2D::Init();

    CTexture *pTexture = GET_TEXTURE_PTR;
    BindTexture(pTexture->GetTexture(CTexture::TEXTURE_NUM_TITLE));

    return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CTitleLogo::Uninit()
{
    CScene2D::Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void CTitleLogo::Update()
{
    CScene2D::Update();
}

//=============================================================================
// 描画処理
//=============================================================================
void CTitleLogo::Draw()
{
    CScene2D::Draw();
}